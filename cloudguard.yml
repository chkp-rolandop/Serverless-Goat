## Cloudguard.yml template

# Account Level information This Information can be also supplied as command line arguments.
Account:
  # (boolean) (NotImplemented) an Indications to the tool whether to store the job results. The stored results can be viewed in the cloudguard ui.
  StoreJobReport:  true
  # (dictionary) keys and values that will be attached to the job results. can store information on the build environment.
  # (String) The AWS region to be used.
  Region: us-east-1

# Global Configuration that will be applied for all the functions in that job scan. A function can override this configuration.
Globals:
  # (String) (Default: None) The Default fail threshold for all the features. A feature can override that threshold.
  # The fail threshold will indicate what is the minimum level of issues that if found, will fail the build.
  # Can be one of : None/Low/Medium/High/Critical (default: None)
  # None:     (default) Never fail the build, All issues found will be marked as warnings.
  # Critical: Will fail the build only if Critical issues are observed.
  # High:     Will fail the build only if High (or above) issues are observed.
  # Medium:   Will fail the build only if Medium (or above) issues are observed.
  # Low:      Will fail the build only if Low (or above) issues are observed.
  DefaultFailThreshold: None
  # (boolean) (Default: false) Indicates Cloudguard PermissiveRole feature if we want to check the current function role or to generate a suggested role for the function.
  # false: Cloudguard will check the current function role and alert if the role has redundant permissions. (in that mode the function have the current Role configuration)
  # true: Cloudguard will generate a suggested role for the function
  ProtegoGeneratedRole: true

  # The scanner features block, contains feature level configuration.
  Features:
    # This feature will scan the function code and configuration, generates a role and verify that the current function role has no redundant permissions.
    PermissiveRole:
      # (boolean) (Default: true) Indicates whether this feature should be scanned or skipped.
      Enabled: true
      # (String) (Default: None) The feature FailThreshold indicates what is the minimum level of issues that if found, will fail the build.
      # Can be one of : None/Low/Medium/High/Critical (default: None)
      # see Global:DefaultFailThreshold for more details
      FailThreshold: None
    # This feature will scan the function code and alert if hard coded credentials are found in the code.
    CredentialsUsage:
      Enabled: true
      FailThreshold: None
    # This feature will scan the function dependencies and lookup cloudguard vulnerability DB for any known vulnerable dependency.
    VulnerableDependency:
      Enabled: true
      FailThreshold: None
    # This feature will scan for any action (Like aws api call) that is not compliant with one or more compliance rules.
    RuleViolation:
      Enabled: true
      FailThreshold: None

# integrations section, will detail the integrations used to extract the functions information.
Integrations:
  # Supported integrations : Cloudformation, Sam (Serverless integration will be part of the stack serverless.yml file)
  # only one integration can be specified.

  Sam:
    # (String) the relative path to the sam template file. (can be yaml OR json)
    Template: template.yaml
